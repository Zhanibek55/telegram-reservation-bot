# Функциональное описание Telegram-бота для бронирования столов

## Оглавление
1. [Общее описание](#общее-описание)
2. [Основные функции](#основные-функции)
   - [Регистрация пользователя](#регистрация-пользователя)
   - [Бронирование стола](#бронирование-стола)
   - [Просмотр и управление бронированиями](#просмотр-и-управление-бронированиями)
   - [Админ-панель](#админ-панель)
   - [Управление столами](#управление-столами)
   - [Настройки клуба](#настройки-клуба)
3. [Структура данных](#структура-данных)
4. [Работа с изображением столов](#работа-с-изображением-столов)
5. [Требования к окружению](#требования-к-окружению)
6. [API и интеграции](#api-и-интеграции)
7. [Безопасность](#безопасность)
8. [Возможности для расширения](#возможности-для-расширения)

---

## Общее описание

Данный Telegram-бот предназначен для автоматизации процесса бронирования столов в заведении (в бильярдном клубе). Пользователь может зарегистрироваться, выбрать стол, дату и время, а также управлять своими бронированиями. Администраторы имеют доступ к расширенным функциям управления столами и настройками клуба.

---

## Основные функции

### Регистрация пользователя
- При первом запуске бот предлагает пользователю зарегистрироваться, указав имя и номер телефона.
- Все данные сохраняются в базе данных.

### Бронирование стола
- Пользователь выбирает стол из интерактивного списка (визуализируется картинкой, см. раздел [Работа с изображением столов](#работа-с-изображением-столов)).
- Далее выбирает дату и доступный временной слот.
- После подтверждения бронирование сохраняется в базе данных.
- Если выбранный слот недоступен, бот уведомляет об этом и предлагает выбрать другой.

### Просмотр и управление бронированиями
- Пользователь может посмотреть список своих активных бронирований.
- Возможна отмена бронирования.
- Администратор может просматривать и управлять всеми бронированиями.

### Админ-панель
- Доступна только администраторам (по Telegram ID).
- Функции:
  - Управление столами (добавление, удаление, изменение статуса "доступен/недоступен")
  - Просмотр и управление всеми бронированиями
  - Изменение настроек клуба (часы работы - по умолчанию 15.00-00.00, длительность слота - по умолчанию 2 часа, и т.д.)

### Управление столами
- Возможность быстро менять статус стола (свободен/занят/неактивен).
- Визуализация состояния столов.

### Настройки клуба
- Изменение основных параметров (часы работы, длительность слота, количество столов и т.д.)
- Сохраняются в базе данных.

---

## Структура данных
- **User**: telegram_id, имя, телефон, is_admin
- **Table**: номер, статус (доступен/нет)
- **Reservation**: пользователь, стол, дата, время начала/окончания, статус
- **ClubSettings**: часы работы, длительность слота, прочие параметры

---

## Работа с изображением столов
- Для отображения схемы зала используется изображение, генерируемое функцией `create_table_layout_image`.
- Файл с функцией генерации изображения: `utils.py`
- Пример вызова: `img_bytes = create_table_layout_image(table_states)`
- Ссылка на файл с функцией генерации картинки: [`utils.py`](utils.py)

---

## Требования к окружению
- Python 3.10+
- Библиотеки: на выбор, с воможностью деплоя на pythonanywhere по его требованиям


---

## API и интеграции
- Используется Telegram Bot API для общения с пользователями
- Внешние интеграции (например, webhooks для автоматического обновления кода на сервере)
- Приложение должно быть в виде telegram miniapp (инфо https://docs.telegram-mini-apps.com/packages/telegram-apps-create-mini-app https://docs.telegram-mini-apps.com/platform/about)
---

## Безопасность
- Все чувствительные данные (токены, ID админов, строки подключения) хранятся в `.env` и не попадают в репозиторий
- Доступ к админ-панели только по ID

---

## Возможности для расширения
- Добавление оплаты бронирований
- Интеграция с внешними CRM/ERP
- Поддержка нескольких залов/локаций
- Расширенная аналитика по бронированиям

---

**Документ подготовлен для передачи другому разработчику или ИИ-агенту для создания Telegram MiniApp с аналогичным функционалом.**
